server:
  port: 8080

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka


spring:
  application:
    name: api-gateway
  sleuth:
    sampler:
      probability: 100
  zipkin:
    base-url: http://localhost:9411
  cloud:
    gateway:
      routes:
        - id: product-route
          uri: ${PRODUCT_SERVICE:lb://product-service}
          predicates:
            - Path=/products/**
          filters:
            - name: CircuitBreaker
              args:
                name: productService
                fallbackUri: forward:/fallback
        - id: account-route
          uri: ${ACCOUNT_SERVICE:lb://account-service}
          predicates:
            - Path=/account/**
        - id: order-route
          uri: ${ORDER_SERVICE:lb://order-service}
          predicates:
            - Path=/order/**

#  redis:
#    connect-timeout: 2s
#    host: localhost
#    port: 6379
#    timeout: 1s
#  session:
#    store-type: redis
#    timeout: 10m
#    redis:
#      namespace: edge

resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: 20
        permittedNumberOfCallsInHalfOpenState: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 15000
  timelimiter:
    configs:
      default:
        timeoutDuration: 2s




#spring:
#  application:
#    name: edge-server
#  cloud:
#    gateway:
#      routes:
#        - id: product-route
#          uri: ${PRODUCT_SERVICE:lb://product-service}
#          predicates:
#            - Path=/products/**
#          filters:
#            - name: CircuitBreaker
#              args:
#                name: bookService
#                fallbackUri: forward:/fallback